angular.module("giftSwitch",["appRoutes","mainCtrl","exchangeCtrl","wishlistService","exchangeService","ng-sortable","moment-picker"]),angular.module("appRoutes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,n){e.when("/",{templateUrl:"app/views/pages/home.html"}).when("/recipient",{templateUrl:"app/views/pages/recipient.html",controller:"recipientController",controllerAs:"recipient"}).when("/settings",{templateUrl:"app/views/pages/settings.html",controller:"settingsController",controllerAs:"settings"}).when("/login",{templateUrl:"app/views/pages/login.html",controller:"mainController",controllerAs:"login"}),n.html5Mode({enabled:!0,requireBase:!1})}]),angular.module("exchangeCtrl",["exchangeService","moment-picker"]).controller("exchangeController",["$scope","Exchange","Wishlist",function(e,n,t){var i=this;n.all().success(function(n){i.exchanges=n,i.exchanges[0]?(e.main.currentExchange=i.exchanges[0].id,e.main.currentExchangeName=i.exchanges[0].name):e.main.currentExchange=null}).then(function(){t.all(e.main.currentExchange).success(function(n){e.main.wishlist=n})}),i.loadExchange=function(n,i){e.main.currentExchange=n,e.main.currentExchangeName=i,t.all(e.main.currentExchange).success(function(n){e.main.wishlist=n})},i.addExchange=function(){n.add(i.userData).success(function(t){e.dismiss(),e.reset(),n.all().success(function(e){i.exchanges=e})})},i.clearExchangeForm=function(){e.reset()}}]),angular.module("mainCtrl",["wishlistService","ng-sortable"]).controller("mainController",["$window","$location","Wishlist",function(e,n,t){var i=this;i.loggedIn=!1,"/login"!==n.path()&&(i.loggedIn=!0,t.owner().success(function(e){i.owner=e})),i.addItem=function(){t.add(i.currentExchange,i.userData).success(function(e){i.userData={},t.all(i.currentExchange).success(function(e){i.wishlist=e})})},i.updateItem=function(e,n){var c={};c.description=document.getElementsByName("newDescription")[n].value,c.url=document.getElementsByName("newUrl")[n].value,t.update(i.currentExchange,e,c).success(function(e){i.wishlist[n]=e})},i.removeItem=function(e){t.remove(i.currentExchange,e).success(function(e){t.all(i.currentExchange).success(function(e){i.wishlist=e})})},i.isActive=function(e){return e===n.path()},i.googleLogin=function(){e.location.href="/auth/google"},i.logOut=function(){e.location.href="/logout"}}]).directive("exchangeModal",function(){return{restrict:"A",link:function(e,n,t){e.dismiss=function(){n.modal("hide")},e.reset=function(){n.on("hidden.bs.modal",function(){$(this).find("form")[0].reset()})}}}}),angular.module("exchangeService",[]).factory("Exchange",["$http",function(e){var n={};return n.all=function(){return e.get("/api/exchange")},n.add=function(n){return e.post("/api/exchange",n)},n.update=function(n,t){return e.put("/api/exchange/"+n,t)},n["delete"]=function(n){return e["delete"]("/api/exchange/"+n)},n}]),angular.module("wishlistService",[]).factory("Wishlist",["$http",function(e){var n={};return n.owner=function(){return e.get("/api/me")},n.all=function(n){return e.get("/api/"+n+"/wishlist")},n.add=function(n,t){return e.post("/api/"+n+"/wishlist",t)},n.update=function(n,t,i){return e.put("/api/"+n+"/wishlist/"+t,i)},n.remove=function(n,t){return e["delete"]("/api/"+n+"/wishlist/"+t)},n}]);